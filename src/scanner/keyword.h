/**
 * @file keyword.h
 *
 * @brief This is a hand-written keyword list. Normally this would be
 * generated by the parser generator, but this is here to test the example
 * scanner implementation.
 *
 * @author Charles Tilbury (chucktilbury@gmail.com)
 * @version 0.0
 * @date 01-10-2024
 * @copyright Copyright (c) 2024
 */
#ifndef _KEYWORD_H
#define _KEYWORD_H

// List of every terminal symbol possible.
typedef enum {
    END_OF_INPUT,
    TOK_ERROR,
    TOK_BREAK,
    TOK_CASE,
    TOK_CONTINUE,
    TOK_CONST,
    TOK_DEFAULT,
    TOK_IMPORT,
    TOK_DO,
    TOK_ELSE,
    TOK_FOR,
    TOK_IF,
    TOK_RETURN,
    TOK_SWITCH,
    TOK_WHILE,
    TOK_IN,
    TOK_TO,
    TOK_AS,
    TOK_YIELD,
    TOK_EXIT,
    TOK_TRY,
    TOK_EXCEPT,
    TOK_RAISE,
    TOK_CTOR,
    TOK_DTOR,
    TOK_START,
    TOK_NAMESPACE,
    TOK_CLASS,
    TOK_STRUCT,
    TOK_PUBLIC,
    TOK_PRIVATE,
    TOK_PROTECTED,
    TOK_NUMBER,
    TOK_NOTHING,
    TOK_STRING,
    TOK_BOOLEAN,
    TOK_LIST,
    TOK_DICT,
    TOK_TRACE,
    TOK_PRINT,
    TOK_TYPE,
    TOK_TRUE_BOOL,
    TOK_FALSE_BOOL,
    TOK_LORE,
    TOK_GORE,
    TOK_EQU,
    TOK_NEQU,
    TOK_OR,
    TOK_AND,
    TOK_NOT,
    TOK_ADD_ASSIGN,
    TOK_SUB_ASSIGN,
    TOK_MUL_ASSIGN,
    TOK_DIV_ASSIGN,
    TOK_MOD_ASSIGN,
    TOK_ADD,
    TOK_SUB,
    TOK_ASSIGN,
    TOK_DIV,
    TOK_MUL,
    TOK_MOD,
    TOK_OPAREN,
    TOK_CPAREN,
    TOK_OCBRACE,
    TOK_CCBRACE,
    TOK_OSBRACE,
    TOK_CSBRACE,
    TOK_COMMA,
    TOK_DOT,
    TOK_OPBRACE,
    TOK_CPBRACE,
    TOK_COLON,
    TOK_CARAT,
    TOK_AMPER,
    TOK_INLINE,
    TOK_LITERAL_NUM,
    TOK_LITERAL_STR,
    TOK_SYMBOL,
} TokenType;

typedef struct {
    const char* str;
    TokenType type;
} KeywordList;

extern KeywordList keyword_list[];
extern const int num_keywords;


#endif /* _KEYWORD_H */
