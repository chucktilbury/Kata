TRACE: main(): push trace state: true
ENTER: main(): 
    ENTER: init_parser(): 
        TRACE: init_parser(): file name: "/home/chuck/Src/Kata/test/parse/module/module/items.k"
        ENTER: init_paths(): 
            ENTER: add_path(): 
                TRACE: add_path(): ./
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/inputs/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/misc/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/parse/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/stuff/
            RETURN: add_path(): 
        RETURN: init_paths(): 
        ENTER: find_file(): 
            TRACE: find_file(): trying: /home/chuck/Src/Kata/test/parse/module/module/items.k
            TRACE: find_file(): found: /home/chuck/Src/Kata/test/parse/module/module/items.k
        RETURN(create_string(tmp_buf)): find_file() - (!NULL)
        ENTER: init_scanner(): 
            ENTER: open_file(): 
                ENTER: push_input_file(): 
                    TRACE: push_input_file(): input file: /home/chuck/Src/Kata/test/parse/module/module/items.k
                RETURN: push_input_file(): 
            RETURN: open_file(): 
        RETURN: init_scanner(): 
        ENTER: create_parser_state(): 
            ENTER: push_scope(): 
                TRACE: push_scope(): scope: PRIVATE
            RETURN: push_scope(): 
            ENTER: push_name(): 
                TRACE: push_name(): name: root
            RETURN: push_name(): 
        RETURN(parser_state): create_parser_state() - (!NULL)
    RETURN: init_parser(): 
    TRACE: main(): --------------------------------------------
    TRACE: main(): Begin Parse
    ENTER: parse(): 
        ENTER: parse_module(): 
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: get_scope(): 
                        RETURN(*node): get_scope() - (!NULL)
                        ENTER: push_scope(): 
                            TRACE: push_scope(): scope: PRIVATE
                        RETURN: push_scope(): 
                        TERM: parse_namespace_definition(): symbol: "name": 11: 15: "items.k"
                        ENTER: push_name(): 
                            TRACE: push_name(): name: name
                        RETURN: push_name(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_namespace_item(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: parse_scope_operator(): 
                            RETURN(node): parse_scope_operator() - (NULL)
                            ENTER: parse_namespace_definition(): 
                            RETURN(node): parse_namespace_definition() - (NULL)
                            ENTER: parse_class_definition(): 
                            RETURN(node): parse_class_definition() - (NULL)
                            ENTER: parse_function_definition(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_definition() - (NULL)
                            ENTER: parse_create_definition(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_create_definition() - (NULL)
                            ENTER: parse_destroy_definition(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_destroy_definition() - (NULL)
                            ENTER: parse_var_definition(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_var_definition() - (NULL)
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_namespace_item() - (NULL)
                        TRACE: parse_namespace_definition(): scope before return: root.name.
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: pop_scope(): 
                        RETURN(*node): pop_scope() - (!NULL)
                        ENTER: pop_name(): 
                        RETURN(pop_link_list(parser_state->name_stack)): pop_name() - (!NULL)
                    RETURN(node): parse_namespace_definition() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                        TERM: parse_scope_operator(): public: "public": 13: 7: "items.k"
                        ENTER: set_scope(): 
                            TRACE: set_scope(): scope: PUBLIC
                        RETURN: set_scope(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    RETURN(node): parse_scope_operator() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                        TERM: parse_scope_operator(): private: "private": 14: 8: "items.k"
                        ENTER: set_scope(): 
                            TRACE: set_scope(): scope: PRIVATE
                        RETURN: set_scope(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    RETURN(node): parse_scope_operator() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                        TERM: parse_scope_operator(): protected: "protected": 15: 10: "items.k"
                        ENTER: set_scope(): 
                            TRACE: set_scope(): scope: PROTECTED
                        RETURN: set_scope(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    RETURN(node): parse_scope_operator() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                        ENTER: get_scope(): 
                        RETURN(*node): get_scope() - (!NULL)
                        ENTER: push_scope(): 
                            TRACE: push_scope(): scope: PRIVATE
                        RETURN: push_scope(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: push_name(): 
                            TRACE: push_name(): name: name
                        RETURN: push_name(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_type_name(): 
                            ENTER: parse_literal_type_name(): 
                            RETURN(node): parse_literal_type_name() - (NULL)
                            ENTER: parse_compound_name(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                TERM: parse_compound_name(): symbol: "some": 17: 17: "items.k"
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                TERM: parse_compound_name(): symbol: "name": 17: 22: "items.k"
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            RETURN(node): parse_compound_name() - (!NULL)
                            TERM: parse_type_name(): ): ")": 17: 23: "items.k"
                            ENTER: finalize_token_queue(): 
                            RETURN: finalize_token_queue(): 
                        RETURN(node): parse_type_name() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_class_item(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: parse_scope_operator(): 
                            RETURN(node): parse_scope_operator() - (NULL)
                            ENTER: parse_destroy_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_destroy_declaration() - (NULL)
                            ENTER: parse_create_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_create_declaration() - (NULL)
                            ENTER: parse_function_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                TRACE: parse_function_declaration(): state: 0
                                TRACE: parse_function_declaration(): state: 101
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_declaration() - (NULL)
                            ENTER: parse_class_var_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                ENTER: parse_var_decl(): 
                                    ENTER: parse_type_name(): 
                                        ENTER: parse_literal_type_name(): 
                                        RETURN(node): parse_literal_type_name() - (NULL)
                                        ENTER: parse_compound_name(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            TERM: parse_compound_name(): symbol: "some": 18: 13: "items.k"
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                            TERM: parse_compound_name(): symbol: "name": 18: 18: "items.k"
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                        RETURN(node): parse_compound_name() - (!NULL)
                                        TERM: parse_type_name(): symbol: "name": 18: 23: "items.k"
                                        ENTER: finalize_token_queue(): 
                                        RETURN: finalize_token_queue(): 
                                    RETURN(node): parse_type_name() - (!NULL)
                                    ENTER: finalize_token_queue(): 
                                    RETURN: finalize_token_queue(): 
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                RETURN(node): parse_var_decl() - (!NULL)
                            RETURN(node): parse_class_var_declaration() - (!NULL)
                            ENTER: get_scope(): 
                            RETURN(*node): get_scope() - (!NULL)
                            TERM: parse_class_item(): func: "func": 19: 9: "items.k"
                        RETURN(node): parse_class_item() - (!NULL)
                        ENTER: parse_class_item(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: parse_scope_operator(): 
                            RETURN(node): parse_scope_operator() - (NULL)
                            ENTER: parse_destroy_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_destroy_declaration() - (NULL)
                            ENTER: parse_create_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_create_declaration() - (NULL)
                            ENTER: parse_function_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                TRACE: parse_function_declaration(): state: 0
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                TRACE: parse_function_declaration(): state: 1
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                TERM: parse_function_declaration(): symbol: "a_name": 19: 16: "items.k"
                                TRACE: parse_function_declaration(): state: 2
                                ENTER: parse_type_name_list(): 
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    ENTER: parse_type_name(): 
                                        ENTER: parse_literal_type_name(): 
                                        RETURN(node): parse_literal_type_name() - (NULL)
                                        ENTER: parse_compound_name(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_name() - (NULL)
                                    RETURN(node): parse_type_name() - (NULL)
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    ENTER: finalize_token_queue(): 
                                    RETURN: finalize_token_queue(): 
                                RETURN(node): parse_type_name_list() - (!NULL)
                                TRACE: parse_function_declaration(): state: 3
                                ENTER: parse_type_name_list(): 
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    ENTER: parse_type_name(): 
                                        ENTER: parse_literal_type_name(): 
                                        RETURN(node): parse_literal_type_name() - (NULL)
                                        ENTER: parse_compound_name(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_name() - (NULL)
                                    RETURN(node): parse_type_name() - (NULL)
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    ENTER: finalize_token_queue(): 
                                    RETURN: finalize_token_queue(): 
                                RETURN(node): parse_type_name_list() - (!NULL)
                                TRACE: parse_function_declaration(): state: 100
                            RETURN(node): parse_function_declaration() - (!NULL)
                            ENTER: get_scope(): 
                            RETURN(*node): get_scope() - (!NULL)
                            TERM: parse_class_item(): }: "}": 20: 2: "items.k"
                        RETURN(node): parse_class_item() - (!NULL)
                        ENTER: parse_class_item(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: parse_scope_operator(): 
                            RETURN(node): parse_scope_operator() - (NULL)
                            ENTER: parse_destroy_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_destroy_declaration() - (NULL)
                            ENTER: parse_create_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_create_declaration() - (NULL)
                            ENTER: parse_function_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                TRACE: parse_function_declaration(): state: 0
                                TRACE: parse_function_declaration(): state: 101
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_declaration() - (NULL)
                            ENTER: parse_class_var_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_class_var_declaration() - (NULL)
                            TERM: parse_class_item(): }: "}": 20: 2: "items.k"
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_class_item() - (NULL)
                        TRACE: parse_class_definition(): scope before return: name.
                        ENTER: pop_scope(): 
                        RETURN(*node): pop_scope() - (!NULL)
                        ENTER: pop_name(): 
                        RETURN(pop_link_list(parser_state->name_stack)): pop_name() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    RETURN(node): parse_class_definition() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                    RETURN(node): parse_class_definition() - (NULL)
                    ENTER: parse_function_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_compound_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            TERM: parse_compound_name(): symbol: "name": 23: 10: "items.k"
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            TERM: parse_compound_name(): symbol: "a_name": 23: 17: "items.k"
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_compound_name() - (!NULL)
                        ENTER: parse_var_decl_list(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: parse_var_decl(): 
                                ENTER: parse_type_name(): 
                                    ENTER: parse_literal_type_name(): 
                                    RETURN(node): parse_literal_type_name() - (NULL)
                                    ENTER: parse_compound_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_name() - (NULL)
                                RETURN(node): parse_type_name() - (NULL)
                            RETURN(node): parse_var_decl() - (NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_var_decl_list() - (!NULL)
                        ENTER: parse_var_decl_list(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: parse_var_decl(): 
                                ENTER: parse_type_name(): 
                                    ENTER: parse_literal_type_name(): 
                                    RETURN(node): parse_literal_type_name() - (NULL)
                                    ENTER: parse_compound_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_name() - (NULL)
                                RETURN(node): parse_type_name() - (NULL)
                            RETURN(node): parse_var_decl() - (NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_var_decl_list() - (!NULL)
                        ENTER: parse_function_body(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: parse_function_body_element(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: parse_var_definition(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_var_definition() - (NULL)
                                ENTER: parse_function_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_compound_reference(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: parse_compound_ref_item(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: parse_array_reference(): 
                                                ENTER: post_token_queue(): 
                                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                                ENTER: reset_token_queue(): 
                                                RETURN: reset_token_queue(): 
                                            RETURN(node): parse_array_reference() - (NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_ref_item() - (NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_reference() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_function_reference() - (NULL)
                                ENTER: parse_create_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_create_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_create_name() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_create_reference() - (NULL)
                                ENTER: parse_destroy_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_destroy_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_destroy_name() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_destroy_reference() - (NULL)
                                ENTER: parse_assignment(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    TRACE: parse_assignment(): state = 0
                                    ENTER: parse_compound_reference(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: parse_compound_ref_item(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: parse_array_reference(): 
                                                ENTER: post_token_queue(): 
                                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                                ENTER: reset_token_queue(): 
                                                RETURN: reset_token_queue(): 
                                            RETURN(node): parse_array_reference() - (NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_ref_item() - (NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_reference() - (NULL)
                                    TRACE: parse_assignment(): state = 101
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_assignment() - (NULL)
                                ENTER: parse_while_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_while_definition(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_while_definition() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_while_clause() - (NULL)
                                ENTER: parse_do_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_do_clause() - (NULL)
                                ENTER: parse_for_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    TRACE: parse_for_clause(): state = 0
                                    TRACE: parse_for_clause(): state = 101
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_for_clause() - (NULL)
                                ENTER: parse_if_clause(): 
                                RETURN(node): parse_if_clause() - (NULL)
                                ENTER: parse_try_clause(): 
                                RETURN(node): parse_try_clause() - (NULL)
                                ENTER: parse_switch_clause(): 
                                RETURN(node): parse_switch_clause() - (NULL)
                                ENTER: parse_break_statement(): 
                                RETURN(node): parse_break_statement() - (NULL)
                                ENTER: parse_continue_statement(): 
                                RETURN(node): parse_continue_statement() - (NULL)
                                ENTER: parse_trace_statement(): 
                                RETURN(node): parse_trace_statement() - (NULL)
                                ENTER: parse_inline_statement(): 
                                RETURN(node): parse_inline_statement() - (NULL)
                                ENTER: parse_yield_statement(): 
                                RETURN(node): parse_yield_statement() - (NULL)
                                ENTER: parse_type_statement(): 
                                RETURN(node): parse_type_statement() - (NULL)
                                ENTER: parse_exit_statement(): 
                                RETURN(node): parse_exit_statement() - (NULL)
                                ENTER: parse_print_statement(): 
                                RETURN(node): parse_print_statement() - (NULL)
                                ENTER: parse_return_statement(): 
                                RETURN(node): parse_return_statement() - (NULL)
                                ENTER: parse_raise_statement(): 
                                RETURN(node): parse_raise_statement() - (NULL)
                                ENTER: parse_function_body(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_function_body() - (NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_body_element() - (NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_function_body() - (!NULL)
                    RETURN(node): parse_function_definition() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                    RETURN(node): parse_class_definition() - (NULL)
                    ENTER: parse_function_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_compound_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            TERM: parse_compound_name(): symbol: "create_name": 25: 17: "items.k"
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_compound_name() - (NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_function_definition() - (NULL)
                    ENTER: parse_create_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_create_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_create_name() - (!NULL)
                        ENTER: parse_var_decl_list(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: parse_var_decl(): 
                                ENTER: parse_type_name(): 
                                    ENTER: parse_literal_type_name(): 
                                    RETURN(node): parse_literal_type_name() - (NULL)
                                    ENTER: parse_compound_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_name() - (NULL)
                                RETURN(node): parse_type_name() - (NULL)
                            RETURN(node): parse_var_decl() - (NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_var_decl_list() - (!NULL)
                        ENTER: parse_function_body(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: parse_function_body_element(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: parse_var_definition(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_var_definition() - (NULL)
                                ENTER: parse_function_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_compound_reference(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: parse_compound_ref_item(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: parse_array_reference(): 
                                                ENTER: post_token_queue(): 
                                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                                ENTER: reset_token_queue(): 
                                                RETURN: reset_token_queue(): 
                                            RETURN(node): parse_array_reference() - (NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_ref_item() - (NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_reference() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_function_reference() - (NULL)
                                ENTER: parse_create_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_create_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_create_name() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_create_reference() - (NULL)
                                ENTER: parse_destroy_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_destroy_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_destroy_name() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_destroy_reference() - (NULL)
                                ENTER: parse_assignment(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    TRACE: parse_assignment(): state = 0
                                    ENTER: parse_compound_reference(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: parse_compound_ref_item(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: parse_array_reference(): 
                                                ENTER: post_token_queue(): 
                                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                                ENTER: reset_token_queue(): 
                                                RETURN: reset_token_queue(): 
                                            RETURN(node): parse_array_reference() - (NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_ref_item() - (NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_reference() - (NULL)
                                    TRACE: parse_assignment(): state = 101
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_assignment() - (NULL)
                                ENTER: parse_while_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_while_definition(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_while_definition() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_while_clause() - (NULL)
                                ENTER: parse_do_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_do_clause() - (NULL)
                                ENTER: parse_for_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    TRACE: parse_for_clause(): state = 0
                                    TRACE: parse_for_clause(): state = 101
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_for_clause() - (NULL)
                                ENTER: parse_if_clause(): 
                                RETURN(node): parse_if_clause() - (NULL)
                                ENTER: parse_try_clause(): 
                                RETURN(node): parse_try_clause() - (NULL)
                                ENTER: parse_switch_clause(): 
                                RETURN(node): parse_switch_clause() - (NULL)
                                ENTER: parse_break_statement(): 
                                RETURN(node): parse_break_statement() - (NULL)
                                ENTER: parse_continue_statement(): 
                                RETURN(node): parse_continue_statement() - (NULL)
                                ENTER: parse_trace_statement(): 
                                RETURN(node): parse_trace_statement() - (NULL)
                                ENTER: parse_inline_statement(): 
                                RETURN(node): parse_inline_statement() - (NULL)
                                ENTER: parse_yield_statement(): 
                                RETURN(node): parse_yield_statement() - (NULL)
                                ENTER: parse_type_statement(): 
                                RETURN(node): parse_type_statement() - (NULL)
                                ENTER: parse_exit_statement(): 
                                RETURN(node): parse_exit_statement() - (NULL)
                                ENTER: parse_print_statement(): 
                                RETURN(node): parse_print_statement() - (NULL)
                                ENTER: parse_return_statement(): 
                                RETURN(node): parse_return_statement() - (NULL)
                                ENTER: parse_raise_statement(): 
                                RETURN(node): parse_raise_statement() - (NULL)
                                ENTER: parse_function_body(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_function_body() - (NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_body_element() - (NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_function_body() - (!NULL)
                    RETURN(node): parse_create_definition() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                    RETURN(node): parse_class_definition() - (NULL)
                    ENTER: parse_function_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_compound_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            TERM: parse_compound_name(): symbol: "destroy_name": 27: 18: "items.k"
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_compound_name() - (NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_function_definition() - (NULL)
                    ENTER: parse_create_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_create_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_create_name() - (NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_create_definition() - (NULL)
                    ENTER: parse_destroy_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_destroy_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_destroy_name() - (!NULL)
                        ENTER: parse_function_body(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                            ENTER: parse_function_body_element(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: parse_var_definition(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_var_definition() - (NULL)
                                ENTER: parse_function_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_compound_reference(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: parse_compound_ref_item(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: parse_array_reference(): 
                                                ENTER: post_token_queue(): 
                                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                                ENTER: reset_token_queue(): 
                                                RETURN: reset_token_queue(): 
                                            RETURN(node): parse_array_reference() - (NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_ref_item() - (NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_reference() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_function_reference() - (NULL)
                                ENTER: parse_create_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_create_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_create_name() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_create_reference() - (NULL)
                                ENTER: parse_destroy_reference(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_destroy_name(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_destroy_name() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_destroy_reference() - (NULL)
                                ENTER: parse_assignment(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    TRACE: parse_assignment(): state = 0
                                    ENTER: parse_compound_reference(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: parse_compound_ref_item(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: parse_array_reference(): 
                                                ENTER: post_token_queue(): 
                                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                                ENTER: reset_token_queue(): 
                                                RETURN: reset_token_queue(): 
                                            RETURN(node): parse_array_reference() - (NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_ref_item() - (NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_reference() - (NULL)
                                    TRACE: parse_assignment(): state = 101
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_assignment() - (NULL)
                                ENTER: parse_while_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_while_definition(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_while_definition() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_while_clause() - (NULL)
                                ENTER: parse_do_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_do_clause() - (NULL)
                                ENTER: parse_for_clause(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    TRACE: parse_for_clause(): state = 0
                                    TRACE: parse_for_clause(): state = 101
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_for_clause() - (NULL)
                                ENTER: parse_if_clause(): 
                                RETURN(node): parse_if_clause() - (NULL)
                                ENTER: parse_try_clause(): 
                                RETURN(node): parse_try_clause() - (NULL)
                                ENTER: parse_switch_clause(): 
                                RETURN(node): parse_switch_clause() - (NULL)
                                ENTER: parse_break_statement(): 
                                RETURN(node): parse_break_statement() - (NULL)
                                ENTER: parse_continue_statement(): 
                                RETURN(node): parse_continue_statement() - (NULL)
                                ENTER: parse_trace_statement(): 
                                RETURN(node): parse_trace_statement() - (NULL)
                                ENTER: parse_inline_statement(): 
                                RETURN(node): parse_inline_statement() - (NULL)
                                ENTER: parse_yield_statement(): 
                                RETURN(node): parse_yield_statement() - (NULL)
                                ENTER: parse_type_statement(): 
                                RETURN(node): parse_type_statement() - (NULL)
                                ENTER: parse_exit_statement(): 
                                RETURN(node): parse_exit_statement() - (NULL)
                                ENTER: parse_print_statement(): 
                                RETURN(node): parse_print_statement() - (NULL)
                                ENTER: parse_return_statement(): 
                                RETURN(node): parse_return_statement() - (NULL)
                                ENTER: parse_raise_statement(): 
                                RETURN(node): parse_raise_statement() - (NULL)
                                ENTER: parse_function_body(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_function_body() - (NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_body_element() - (NULL)
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_function_body() - (!NULL)
                    RETURN(node): parse_destroy_definition() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                    RETURN(node): parse_class_definition() - (NULL)
                    ENTER: parse_function_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_function_definition() - (NULL)
                    ENTER: parse_create_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_create_definition() - (NULL)
                    ENTER: parse_destroy_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_destroy_definition() - (NULL)
                    ENTER: parse_var_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_var_decl(): 
                            ENTER: parse_type_name(): 
                                ENTER: parse_literal_type_name(): 
                                RETURN(node): parse_literal_type_name() - (NULL)
                                ENTER: parse_compound_name(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    TERM: parse_compound_name(): symbol: "some": 29: 9: "items.k"
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    TERM: parse_compound_name(): symbol: "darn": 29: 14: "items.k"
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    TERM: parse_compound_name(): symbol: "name": 29: 19: "items.k"
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                RETURN(node): parse_compound_name() - (!NULL)
                                TERM: parse_type_name(): symbol: "name": 29: 24: "items.k"
                                ENTER: finalize_token_queue(): 
                                RETURN: finalize_token_queue(): 
                            RETURN(node): parse_type_name() - (!NULL)
                            ENTER: finalize_token_queue(): 
                            RETURN: finalize_token_queue(): 
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_var_decl() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_assignment_item(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: parse_expression(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                TRACE: parse_expression(): state: 0, stack: 0, queue: 0
                                ENTER: parse_operator(): 
                                RETURN(node): parse_operator() - (NULL)
                                ENTER: parse_expr_primary(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_literal_value(): 
                                        TERM: parse_literal_value(): literal float: "123.123": 29: 34: "items.k"
                                        ENTER: advance_token(): 
                                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                    RETURN(node): parse_literal_value() - (!NULL)
                                    ENTER: finalize_token_queue(): 
                                    RETURN: finalize_token_queue(): 
                                RETURN(node): parse_expr_primary() - (!NULL)
                                TRACE: parse_expression(): state: 8, stack: 0, queue: 0
                                TRACE: parse_expression(): state: 1, stack: 0, queue: 1
                                ENTER: parse_operator(): 
                                RETURN(node): parse_operator() - (NULL)
                                ENTER: parse_expr_primary(): 
                                    ENTER: post_token_queue(): 
                                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                    ENTER: parse_literal_value(): 
                                    RETURN(node): parse_literal_value() - (NULL)
                                    ENTER: parse_compound_reference(): 
                                        ENTER: post_token_queue(): 
                                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                        ENTER: parse_compound_ref_item(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            ENTER: parse_array_reference(): 
                                                ENTER: post_token_queue(): 
                                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                                ENTER: reset_token_queue(): 
                                                RETURN: reset_token_queue(): 
                                            RETURN(node): parse_array_reference() - (NULL)
                                            ENTER: reset_token_queue(): 
                                            RETURN: reset_token_queue(): 
                                        RETURN(node): parse_compound_ref_item() - (NULL)
                                        ENTER: reset_token_queue(): 
                                        RETURN: reset_token_queue(): 
                                    RETURN(node): parse_compound_reference() - (NULL)
                                    ENTER: reset_token_queue(): 
                                    RETURN: reset_token_queue(): 
                                RETURN(node): parse_expr_primary() - (NULL)
                                TRACE: parse_expression(): state: 100, stack: 0, queue: 1, pcount: 0
                                TERM: parse_expression(): var: "var": 30: 4: "items.k"
                                ENTER: finalize_token_queue(): 
                                RETURN: finalize_token_queue(): 
                            RETURN(node): parse_expression() - (!NULL)
                            ENTER: finalize_token_queue(): 
                            RETURN: finalize_token_queue(): 
                        RETURN(node): parse_assignment_item() - (!NULL)
                        ENTER: finalize_token_queue(): 
                        RETURN: finalize_token_queue(): 
                    RETURN(node): parse_var_definition() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                    RETURN(node): parse_class_definition() - (NULL)
                    ENTER: parse_function_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_function_definition() - (NULL)
                    ENTER: parse_create_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_create_definition() - (NULL)
                    ENTER: parse_destroy_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_destroy_definition() - (NULL)
                    ENTER: parse_var_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_var_decl(): 
                            ENTER: parse_type_name(): 
                                ENTER: parse_literal_type_name(): 
                                    TERM: parse_literal_type_name(): float: "float": 30: 10: "items.k"
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                RETURN(node): parse_literal_type_name() - (!NULL)
                                TERM: parse_type_name(): symbol: "name": 30: 15: "items.k"
                                ENTER: finalize_token_queue(): 
                                RETURN: finalize_token_queue(): 
                            RETURN(node): parse_type_name() - (!NULL)
                            ENTER: finalize_token_queue(): 
                            RETURN: finalize_token_queue(): 
                            ENTER: advance_token(): 
                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        RETURN(node): parse_var_decl() - (!NULL)
                        ENTER: finalize_token_queue(): 
                        RETURN: finalize_token_queue(): 
                    RETURN(node): parse_var_definition() - (!NULL)
                    ENTER: get_scope(): 
                    RETURN(*node): get_scope() - (!NULL)
                RETURN(node): parse_namespace_item() - (!NULL)
                ENTER: get_scope(): 
                RETURN(*node): get_scope() - (!NULL)
            RETURN(node): parse_module_item() - (!NULL)
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                    RETURN(node): parse_class_definition() - (NULL)
                    ENTER: parse_function_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_function_definition() - (NULL)
                    ENTER: parse_create_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_create_definition() - (NULL)
                    ENTER: parse_destroy_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_destroy_definition() - (NULL)
                    ENTER: parse_var_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_var_definition() - (NULL)
                    ENTER: reset_token_queue(): 
                    RETURN: reset_token_queue(): 
                RETURN(node): parse_namespace_item() - (NULL)
                ENTER: parse_import_statement(): 
                    ENTER: advance_token(): 
                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    ENTER: advance_token(): 
                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    ENTER: advance_token(): 
                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    ENTER: advance_token(): 
                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                    ENTER: handle_import(): 
                        ENTER: find_file(): 
                            TRACE: find_file(): trying: empty
                            TRACE: find_file(): trying: ./empty
                            TRACE: find_file(): trying: ../empty
                            TRACE: find_file(): trying: ../test/empty
                            TRACE: find_file(): trying: ../test/inputs/empty
                            TRACE: find_file(): trying: ../test/misc/empty
                            TRACE: find_file(): trying: ../test/parse/empty
                            TRACE: find_file(): trying: ../test/stuff/empty
