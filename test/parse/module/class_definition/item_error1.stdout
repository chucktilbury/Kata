TRACE: main(): push trace state: true
ENTER: main(): 
    ENTER: init_parser(): 
        TRACE: init_parser(): file name: "/home/chuck/Src/Kata/test/parse/module/class_definition/item_error1.k"
        ENTER: init_paths(): 
            ENTER: add_path(): 
                TRACE: add_path(): ./
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/inputs/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/misc/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/parse/
            RETURN: add_path(): 
            ENTER: add_path(): 
                TRACE: add_path(): ../test/stuff/
            RETURN: add_path(): 
        RETURN: init_paths(): 
        ENTER: find_file(): 
            TRACE: find_file(): trying: /home/chuck/Src/Kata/test/parse/module/class_definition/item_error1.k
            TRACE: find_file(): found: /home/chuck/Src/Kata/test/parse/module/class_definition/item_error1.k
        RETURN(create_string(tmp_buf)): find_file() - (!NULL)
        ENTER: init_scanner(): 
            ENTER: open_file(): 
                ENTER: push_input_file(): 
                    TRACE: push_input_file(): input file: /home/chuck/Src/Kata/test/parse/module/class_definition/item_error1.k
                RETURN: push_input_file(): 
            RETURN: open_file(): 
        RETURN: init_scanner(): 
        ENTER: create_parser_state(): 
            ENTER: push_scope(): 
                TRACE: push_scope(): scope: PRIVATE
            RETURN: push_scope(): 
            ENTER: push_name(): 
                TRACE: push_name(): name: root
            RETURN: push_name(): 
        RETURN(parser_state): create_parser_state() - (!NULL)
    RETURN: init_parser(): 
    TRACE: main(): --------------------------------------------
    TRACE: main(): Begin Parse
    ENTER: parse(): 
        ENTER: parse_module(): 
            ENTER: parse_module_item(): 
                ENTER: post_token_queue(): 
                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                ENTER: parse_namespace_item(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: parse_scope_operator(): 
                    RETURN(node): parse_scope_operator() - (NULL)
                    ENTER: parse_namespace_definition(): 
                    RETURN(node): parse_namespace_definition() - (NULL)
                    ENTER: parse_class_definition(): 
                        ENTER: get_scope(): 
                        RETURN(*node): get_scope() - (!NULL)
                        ENTER: push_scope(): 
                            TRACE: push_scope(): scope: PRIVATE
                        RETURN: push_scope(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: push_name(): 
                            TRACE: push_name(): name: name
                        RETURN: push_name(): 
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_class_item(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: parse_scope_operator(): 
                            RETURN(node): parse_scope_operator() - (NULL)
                            ENTER: parse_destroy_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_destroy_declaration() - (NULL)
                            ENTER: parse_create_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_create_declaration() - (NULL)
                            ENTER: parse_function_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                TRACE: parse_function_declaration(): state: 0
                                TRACE: parse_function_declaration(): state: 101
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_declaration() - (NULL)
                            ENTER: parse_class_var_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                ENTER: parse_var_decl(): 
                                    ENTER: parse_type_name(): 
                                        ENTER: parse_literal_type_name(): 
                                        RETURN(node): parse_literal_type_name() - (NULL)
                                        ENTER: parse_compound_name(): 
                                            ENTER: post_token_queue(): 
                                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                            TERM: parse_compound_name(): symbol: "some": 7: 13: "item_error1.k"
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                            TERM: parse_compound_name(): symbol: "compound": 7: 22: "item_error1.k"
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                            TERM: parse_compound_name(): symbol: "name": 7: 27: "item_error1.k"
                                            ENTER: advance_token(): 
                                            RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                        RETURN(node): parse_compound_name() - (!NULL)
                                        TERM: parse_type_name(): symbol: "name": 7: 32: "item_error1.k"
                                        ENTER: finalize_token_queue(): 
                                        RETURN: finalize_token_queue(): 
                                    RETURN(node): parse_type_name() - (!NULL)
                                    ENTER: finalize_token_queue(): 
                                    RETURN: finalize_token_queue(): 
                                    ENTER: advance_token(): 
                                    RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                RETURN(node): parse_var_decl() - (!NULL)
                            RETURN(node): parse_class_var_declaration() - (!NULL)
                            ENTER: get_scope(): 
                            RETURN(*node): get_scope() - (!NULL)
                            TERM: parse_class_item(): func: "func": 8: 9: "item_error1.k"
                        RETURN(node): parse_class_item() - (!NULL)
                        ENTER: parse_class_item(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: parse_scope_operator(): 
                            RETURN(node): parse_scope_operator() - (NULL)
                            ENTER: parse_destroy_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_destroy_declaration() - (NULL)
                            ENTER: parse_create_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_create_declaration() - (NULL)
                            ENTER: parse_function_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                TRACE: parse_function_declaration(): state: 0
                                ENTER: advance_token(): 
                                RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                                TRACE: parse_function_declaration(): state: 1
                                TRACE: parse_function_declaration(): state: 101
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_function_declaration() - (NULL)
                            ENTER: parse_class_var_declaration(): 
                                ENTER: post_token_queue(): 
                                RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                                ENTER: reset_token_queue(): 
                                RETURN: reset_token_queue(): 
                            RETURN(node): parse_class_var_declaration() - (NULL)
                            TERM: parse_class_item(): func: "func": 8: 9: "item_error1.k"
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_class_item() - (NULL)
symbol: "name": 7: 32: "item_error1.k"
func: "func": 8: 9: "item_error1.k"
start: "start": 8: 15: "item_error1.k"
                    RETURN(node): parse_class_definition() - (NULL)
                    ENTER: parse_function_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_compound_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_compound_name() - (NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_function_definition() - (NULL)
                    ENTER: parse_create_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_create_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_create_name() - (NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_create_definition() - (NULL)
                    ENTER: parse_destroy_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: advance_token(): 
                        RETURN(tqueue->crnt->tok): advance_token() - (!NULL)
                        ENTER: parse_destroy_name(): 
                            ENTER: post_token_queue(): 
                            RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                            ENTER: reset_token_queue(): 
                            RETURN: reset_token_queue(): 
                        RETURN(node): parse_destroy_name() - (NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_destroy_definition() - (NULL)
                    ENTER: parse_var_definition(): 
                        ENTER: post_token_queue(): 
                        RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                        ENTER: reset_token_queue(): 
                        RETURN: reset_token_queue(): 
                    RETURN(node): parse_var_definition() - (NULL)
                    ENTER: reset_token_queue(): 
                    RETURN: reset_token_queue(): 
                RETURN(node): parse_namespace_item() - (NULL)
                ENTER: parse_import_statement(): 
                RETURN(node): parse_import_statement() - (NULL)
                ENTER: parse_start_function(): 
                    ENTER: post_token_queue(): 
                    RETURN((void*)tqueue->crnt): post_token_queue() - (!NULL)
                    ENTER: reset_token_queue(): 
                    RETURN: reset_token_queue(): 
                RETURN(node): parse_start_function() - (NULL)
                ENTER: reset_token_queue(): 
                RETURN: reset_token_queue(): 
            RETURN(node): parse_module_item() - (NULL)
symbol: "name": 7: 32: "item_error1.k"
func: "func": 8: 9: "item_error1.k"
start: "start": 8: 15: "item_error1.k"
        RETURN(node): parse_module() - (NULL)
symbol: "name": 7: 32: "item_error1.k"
func: "func": 8: 9: "item_error1.k"
start: "start": 8: 15: "item_error1.k"
    RETURN(node): parse() - (NULL)
    TRACE: main(): End Parse
    TRACE: main(): --------------------------------------------
    TRACE: main(): set trace state: true
    TRACE: main(): Begin Traverse
    ENTER: traverse_ast(): 
        TRACE: traverse_ast(): no ast present
    RETURN: traverse_ast(): 
    TRACE: main(): End Traverse
    TRACE: main(): --------------------------------------------
